{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/container/container.component.html","webpack:///./src/app/container/container.component.ts","webpack:///./src/app/flip-manager/flip-manager.component.html","webpack:///./src/app/flip-manager/flip-manager.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","\r\n<app-container></app-container>\r\n","import { Component, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'CardGames';\n\n  constructor(private renderer: Renderer2)\n  {\n    \n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FlipManagerComponent } from './flip-manager/flip-manager.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ContainerComponent } from './container/container.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FlipManagerComponent,\n    HeaderComponent,\n    ContainerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<!--The content below is only a placeholder and can be replaced.-->\r\n<app-header></app-header>\r\n\r\n<div style=\"text-align:center\">\r\n  <app-flip-manager></app-flip-manager>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.css']\n})\nexport class ContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div style=\"background-color:white;width:40%;margin:auto;\">\r\n  <p>\r\n    {{title}}\r\n  </p>\r\n  <button (click)=\"newgame()\">Start</button>\r\n  <br /><br /><br /><br />\r\n\r\n  <div style=\"width:90%;overflow:hidden;margin:auto\">\r\n    <ul>\r\n      <li *ngFor='let card of cardList' id=\"trow\">\r\n        <a  *ngIf=\"card.show\">\r\n          <img src=\"{{card.showImage}}\" height=\"150px\" [@CardFlipState]=\"card.flip\" (@CardFlipState.done)=\"onDone($event, card)\" (click)=\"OnCardClick(card)\"/>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n\r\n  \r\n<div [@popOverState]=\"stateName\">\r\n  <p>Hello! I'm a helpful message.</p>\r\n</div>\r\n<button (click)=\"toggle()\">Toggle PopOver</button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { ICard } from '../interface/ICard'\r\nimport { ICardResponse } from '../interface/ICardReponse';\r\n\r\nimport {\r\n  trigger,\r\n  state,\r\n  style,\r\n  animate,\r\n  transition\r\n} from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-flip-manager',\r\n  templateUrl: './flip-manager.component.html',\r\n  styleUrls: ['./flip-manager.component.css'],\r\n  animations: [\r\n    trigger('popOverState', [\r\n      state('show', style({\r\n        opacity: 1\r\n      })),\r\n      state('hide', style({\r\n        opacity: 0\r\n      })),\r\n      transition('show => hide', animate('600ms ease-out')),\r\n      transition('hide => show', animate('1000ms ease-in'))\r\n    ]),\r\n    trigger('CardFlipState', [\r\n      state('open', style({\r\n        transform: 'rotateY(360deg)',\r\n        //opacity: 1\r\n      })),\r\n      state('close', style({\r\n        transform: 'rotateY(36deg)',\r\n        //opacity: 1\r\n      })),\r\n      transition('* => *', animate('500ms ease'))\r\n    ])\r\n  ]\r\n})\r\n\r\nexport class FlipManagerComponent implements OnInit {\r\n\r\n  title: string;\r\n  message: string;\r\n  lastchoosen: string;\r\n\r\n  cardList: ICard[] = [];\r\n\r\n  show = false;\r\n\r\n  get stateName() {\r\n    return this.show ? 'show' : 'hide'\r\n  }\r\n\r\n\r\n  toggle() {\r\n    this.show = !this.show;\r\n  }\r\n\r\n \r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.title = \"Welcome to the Flip game!!.\";\r\n    this.message = \"\";\r\n    this.lastchoosen = \"\";\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n shuffle(a) {\r\n  for (let i = a.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [a[i], a[j]] = [a[j], a[i]];\r\n  }\r\n  return a;\r\n  }\r\n\r\n onClick(card: ICard)\r\n {\r\n   card.showImage = card.image;\r\n   card.flip = 'open';\r\n }\r\n\r\n onDone($event, card) {\r\n   //card.flip = 'close';\r\n\r\n     var that = this;\r\n    //setTimeout(function () {\r\n      that.Validate(card, that);\r\n\r\n   //}, 1000);\r\n   \r\n }\r\n\r\n Validate(card: ICard, that)\r\n {\r\n   if (that.lastchoosen === \"\")\r\n     that.lastchoosen = card.code;\r\n   else {\r\n     if (card.code === that.lastchoosen) {\r\n       that.cardList.forEach(function (data) {\r\n         if (data.code == card.code)\r\n           data.show = false;\r\n       });\r\n     }\r\n     else {\r\n       that.cardList.forEach(function (data) {\r\n         data.showImage = \"../../assets/card.jpg\";\r\n         data.flip = 'close';\r\n       });\r\n     }\r\n\r\n     that.lastchoosen = \"\";\r\n   }\r\n }\r\n\r\n\r\n OnCardClick(card: ICard) {\r\n   //alert('clicked once' + card.code);\r\n   //card.show = false;\r\n//   card.flip = true;\r\n  this.onClick(card);\r\n } \r\n \r\n  newgame() {\r\n    this.message = \"Started new game\";\r\n    this.cardList = [];\r\n\r\n\r\n    return this.http.get(\"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\")\r\n      .subscribe((resp: any) => {\r\n        var deckID = resp.deck_id;\r\n        var cardURL: string = \"https://deckofcardsapi.com/api/deck/\" + deckID + \"/draw/?count=8\";\r\n        this.http.get<ICardResponse>(cardURL)\r\n          .subscribe(resp1 => {\r\n            //this.cardList = resp1.cards;\r\n            resp1.cards.forEach(card => {\r\n              this.cardList.push({ image: card.image, code: card.code, show: true, flip: 'close', showImage: \"../../assets/card.jpg\" });\r\n              this.cardList.push({\r\n                image: card.image, code: card.code, show: true, flip: 'close', showImage: \"../../assets/card.jpg\" });\r\n            });\r\n\r\n            /*for (let card in resp1.cards) {\r\n              this.cardList.push(card);\r\n            }*/\r\n\r\n           this.shuffle(this.cardList);\r\n\r\n            this.message = this.cardList[0].image;\r\n          });\r\n      });\r\n    \r\n  }\r\n}\r\n","<div class=\"header\">\r\n    <img src=\"../../assets/CardGamesLogo.png\" class=\"headerlogo\"/>\r\n\r\n  <div><span> Flip Game </span></div>\r\n  \r\n</div>\r\n<br/>\r\n","import { Component, Renderer2, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private renderer: Renderer2) {\n    this.renderer.addClass(document.body, 'cardgamesbody');\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}